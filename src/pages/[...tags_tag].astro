---
import TagList from '@/components/TagList.astro'
import { defaultLocale, moreLocales } from '@/config'
import Layout from '@/layouts/Layout.astro'
import { getAllTags, getPostsByTag, getTagSupportedLangs } from '@/utils/content'
import { getPostPath, getTagPath } from '@/i18n/path'

export async function getStaticPaths() {
  type PathItem = {
    params: { tags_tag: string }
    props: { tag: string, lang: string }
  }

  const paths: PathItem[] = []

  // Default locale
  const defaultTags = await getAllTags(defaultLocale)
  defaultTags.forEach((tag: string) => {
    paths.push({
      params: { tags_tag: `tags/${tag}/` },
      props: { tag, lang: defaultLocale },
    })
  })

  // More locales
  for (const lang of moreLocales) {
    const langTags = await getAllTags(lang)
    langTags.forEach((tag: string) => {
      paths.push({
        params: { tags_tag: `${lang}/tags/${tag}/` },
        props: { tag, lang },
      })
    })
  }

  return paths
}

const { tag, lang } = Astro.props
const posts = await getPostsByTag(tag, lang)
const allTags = await getAllTags(lang)
const supportedLangs = await getTagSupportedLangs(tag)

// Group posts by year
const postsByYear = new Map<number, typeof posts>()
posts.forEach(post => {
  const year = post.data.published.getFullYear()
  if (!postsByYear.has(year)) {
    postsByYear.set(year, [])
  }
  postsByYear.get(year)!.push(post)
})

// Sort years in descending order and sort posts within each year
const sortedYears = Array.from(postsByYear.keys()).sort((a, b) => b - a)
sortedYears.forEach(year => {
  postsByYear.get(year)!.sort((a, b) => b.data.published.getTime() - a.data.published.getTime())
})

// Format date function for MM-DD
function formatDate(date: Date): string {
  const month = String(date.getMonth() + 1).padStart(2, '0')
  const day = String(date.getDate()).padStart(2, '0')
  return `${month}-${day}`
}

// Get all years as array for easier indexing
const yearsArray = sortedYears.map(year => [year, postsByYear.get(year)!] as const)
---

<Layout supportedLangs={supportedLangs}>
  <!-- Decorative Line -->
  <div class="uno-decorative-line" />
  
  <!-- Tag List -->
  <TagList
    tags={allTags}
    currentTag={tag}
    lang={lang}
  />

  <!-- Posts List Grouped by Year with Timeline -->
  {posts.length > 0 ? (
    <div class="mt-10.5">
      {yearsArray.map(([year, posts], yearIndex) => (
        <div class="relative">
          <!-- Year Timeline Item -->
          <div class="flex items-center h-12 mb-2">
            <!-- Year -->
            <div class="w-16 text-right pr-4">
              <h2 class="text-4.5 font-bold c-primary font-navbar">
                {year}
              </h2>
            </div>
            
            <!-- Timeline Column -->
            <div class="relative w-4 h-full flex items-center justify-center">
              <!-- Year Circle (no line through it) -->
              <div class="w-3 h-3 rounded-full border-2 border-accent bg-white relative z-10"></div>
              <!-- Line starts AFTER the circle and continues to next section -->
              {(posts.length > 0 || yearIndex < yearsArray.length - 1) && (
                <div class="absolute w-px timeline-line-year border-l border-dotted border-secondary/30 left-1/2 transform -translate-x-1/2"></div>
              )}
            </div>
            
            <!-- Empty space to maintain layout -->
            <div class="pl-4">
              <!-- Empty for tag page -->
            </div>
          </div>
          
          <!-- Posts for this year -->
          {posts.map((post, postIndex) => {
            const slug = post.data.abbrlink || post.id
            const postPath = getPostPath(slug, lang)
            
            return (
              <div class="flex items-center h-10 mb-1 group">
                <!-- Date -->
                <div class="w-16 text-right pr-4">
                  <time 
                    class="text-3.2 c-secondary font-time"
                    datetime={post.data.published.toISOString()}
                  >
                    {formatDate(post.data.published)}
                  </time>
                </div>
                
                <!-- Timeline Column -->
                <div class="relative w-4 h-full flex items-center justify-center">
                  <!-- Line continues through all items except the very last one -->
                  {!(postIndex === posts.length - 1 && yearIndex === yearsArray.length - 1) && (
                    <div class="absolute w-px timeline-line-post border-l border-dotted border-secondary/30 left-1/2 transform -translate-x-1/2"></div>
                  )}
                  <!-- Post Dot with white outline to create gap -->
                  <div class="w-1.5 h-1.5 rounded-full bg-primary outline outline-4 outline-white relative z-10"></div>
                </div>
                
                <!-- Post Content -->
                <div class="flex-1 pl-4">
                  <div class="flex items-center justify-between">
                    <a 
                      href={postPath}
                      class="text-decoration-none"
                    >
                      <h3 
                        class="cjk:tracking-0.02em text-3.8 leading-1.4em transition-colors hover:c-primary group-hover:c-primary"
                        transition:name={`post-${slug}${lang ? `-${lang}` : ''}`}
                        data-disable-theme-transition
                      >
                        {post.data.title}
                      </h3>
                    </a>
                    
                    <!-- Tags -->
                    {post.data.tags && post.data.tags.length > 0 && (
                      <div class="flex gap-1.5 flex-wrap ml-4">
                        {post.data.tags.map(postTag => (
                          <a
                            href={getTagPath(postTag, lang)}
                            class="inline-block px-2 py-0.5 text-2.8 c-secondary/70 bg-secondary/8 border border-secondary/15 rounded hover:c-primary/80 hover:border-secondary/30 hover:bg-secondary/12 transition-all ease-out text-decoration-none"
                          >
                            #{postTag}
                          </a>
                        ))}
                      </div>
                    )}
                  </div>
                </div>
              </div>
            )
          })}
          
          <!-- Add spacing between years -->
          {yearIndex < yearsArray.length - 1 && (
            <div class="h-6"></div>
          )}
        </div>
      ))}
    </div>
  ) : (
    <!-- Empty State -->
    <div class="mt-10.5 text-center py-8">
      <p class="text-3.6 c-secondary">No posts found with this tag.</p>
    </div>
  )}
</Layout>

<style>
  .timeline-line-year {
    top: 50%;
    bottom: -5px;
  }
  
  .timeline-line-post {
    height: 104%;
  }
</style>